/*
 * This file is generated by jOOQ.
 */
package edu.java.scrapper.domain.jooq.codegen.tables.pojos;


import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class GithubRelease implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private Long repoId;
    private OffsetDateTime publishedAt;

    public GithubRelease() {}

    public GithubRelease(GithubRelease value) {
        this.id = value.id;
        this.repoId = value.repoId;
        this.publishedAt = value.publishedAt;
    }

    @ConstructorProperties({ "id", "repoId", "publishedAt" })
    public GithubRelease(
        @NotNull Long id,
        @Nullable Long repoId,
        @NotNull OffsetDateTime publishedAt
    ) {
        this.id = id;
        this.repoId = repoId;
        this.publishedAt = publishedAt;
    }

    /**
     * Getter for <code>GITHUB_RELEASE.ID</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>GITHUB_RELEASE.ID</code>.
     */
    public void setId(@NotNull Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>GITHUB_RELEASE.REPO_ID</code>.
     */
    @Nullable
    public Long getRepoId() {
        return this.repoId;
    }

    /**
     * Setter for <code>GITHUB_RELEASE.REPO_ID</code>.
     */
    public void setRepoId(@Nullable Long repoId) {
        this.repoId = repoId;
    }

    /**
     * Getter for <code>GITHUB_RELEASE.PUBLISHED_AT</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public OffsetDateTime getPublishedAt() {
        return this.publishedAt;
    }

    /**
     * Setter for <code>GITHUB_RELEASE.PUBLISHED_AT</code>.
     */
    public void setPublishedAt(@NotNull OffsetDateTime publishedAt) {
        this.publishedAt = publishedAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final GithubRelease other = (GithubRelease) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.repoId == null) {
            if (other.repoId != null)
                return false;
        }
        else if (!this.repoId.equals(other.repoId))
            return false;
        if (this.publishedAt == null) {
            if (other.publishedAt != null)
                return false;
        }
        else if (!this.publishedAt.equals(other.publishedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.repoId == null) ? 0 : this.repoId.hashCode());
        result = prime * result + ((this.publishedAt == null) ? 0 : this.publishedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("GithubRelease (");

        sb.append(id);
        sb.append(", ").append(repoId);
        sb.append(", ").append(publishedAt);

        sb.append(")");
        return sb.toString();
    }
}
