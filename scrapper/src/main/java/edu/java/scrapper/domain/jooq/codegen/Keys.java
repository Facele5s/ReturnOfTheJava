/*
 * This file is generated by jOOQ.
 */
package edu.java.scrapper.domain.jooq.codegen;


import edu.java.scrapper.domain.jooq.codegen.tables.Chat;
import edu.java.scrapper.domain.jooq.codegen.tables.ChatLink;
import edu.java.scrapper.domain.jooq.codegen.tables.GithubCommit;
import edu.java.scrapper.domain.jooq.codegen.tables.GithubPull;
import edu.java.scrapper.domain.jooq.codegen.tables.GithubRelease;
import edu.java.scrapper.domain.jooq.codegen.tables.GithubRepository;
import edu.java.scrapper.domain.jooq.codegen.tables.Link;
import edu.java.scrapper.domain.jooq.codegen.tables.records.ChatLinkRecord;
import edu.java.scrapper.domain.jooq.codegen.tables.records.ChatRecord;
import edu.java.scrapper.domain.jooq.codegen.tables.records.GithubCommitRecord;
import edu.java.scrapper.domain.jooq.codegen.tables.records.GithubPullRecord;
import edu.java.scrapper.domain.jooq.codegen.tables.records.GithubReleaseRecord;
import edu.java.scrapper.domain.jooq.codegen.tables.records.GithubRepositoryRecord;
import edu.java.scrapper.domain.jooq.codegen.tables.records.LinkRecord;

import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ChatRecord> CONSTRAINT_1 = Internal.createUniqueKey(Chat.CHAT, DSL.name("CONSTRAINT_1"), new TableField[] { Chat.CHAT.ID }, true);
    public static final UniqueKey<ChatLinkRecord> CONSTRAINT_8 = Internal.createUniqueKey(ChatLink.CHAT_LINK, DSL.name("CONSTRAINT_8"), new TableField[] { ChatLink.CHAT_LINK.CHAT_ID, ChatLink.CHAT_LINK.LINK_ID }, true);
    public static final UniqueKey<GithubCommitRecord> CONSTRAINT_2B = Internal.createUniqueKey(GithubCommit.GITHUB_COMMIT, DSL.name("CONSTRAINT_2B"), new TableField[] { GithubCommit.GITHUB_COMMIT.SHA }, true);
    public static final UniqueKey<GithubPullRecord> CONSTRAINT_D = Internal.createUniqueKey(GithubPull.GITHUB_PULL, DSL.name("CONSTRAINT_D"), new TableField[] { GithubPull.GITHUB_PULL.ID }, true);
    public static final UniqueKey<GithubReleaseRecord> CONSTRAINT_5 = Internal.createUniqueKey(GithubRelease.GITHUB_RELEASE, DSL.name("CONSTRAINT_5"), new TableField[] { GithubRelease.GITHUB_RELEASE.ID }, true);
    public static final UniqueKey<GithubRepositoryRecord> CONSTRAINT_B = Internal.createUniqueKey(GithubRepository.GITHUB_REPOSITORY, DSL.name("CONSTRAINT_B"), new TableField[] { GithubRepository.GITHUB_REPOSITORY.ID }, true);
    public static final UniqueKey<LinkRecord> CONSTRAINT_2 = Internal.createUniqueKey(Link.LINK, DSL.name("CONSTRAINT_2"), new TableField[] { Link.LINK.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ChatLinkRecord, ChatRecord> CONSTRAINT_86 = Internal.createForeignKey(ChatLink.CHAT_LINK, DSL.name("CONSTRAINT_86"), new TableField[] { ChatLink.CHAT_LINK.CHAT_ID }, Keys.CONSTRAINT_1, new TableField[] { Chat.CHAT.ID }, true);
    public static final ForeignKey<ChatLinkRecord, LinkRecord> CONSTRAINT_868 = Internal.createForeignKey(ChatLink.CHAT_LINK, DSL.name("CONSTRAINT_868"), new TableField[] { ChatLink.CHAT_LINK.LINK_ID }, Keys.CONSTRAINT_2, new TableField[] { Link.LINK.ID }, true);
    public static final ForeignKey<GithubCommitRecord, GithubRepositoryRecord> CONSTRAINT_2B9 = Internal.createForeignKey(GithubCommit.GITHUB_COMMIT, DSL.name("CONSTRAINT_2B9"), new TableField[] { GithubCommit.GITHUB_COMMIT.REPO_ID }, Keys.CONSTRAINT_B, new TableField[] { GithubRepository.GITHUB_REPOSITORY.ID }, true);
    public static final ForeignKey<GithubPullRecord, GithubRepositoryRecord> CONSTRAINT_D8 = Internal.createForeignKey(GithubPull.GITHUB_PULL, DSL.name("CONSTRAINT_D8"), new TableField[] { GithubPull.GITHUB_PULL.REPO_ID }, Keys.CONSTRAINT_B, new TableField[] { GithubRepository.GITHUB_REPOSITORY.ID }, true);
    public static final ForeignKey<GithubReleaseRecord, GithubRepositoryRecord> CONSTRAINT_5C = Internal.createForeignKey(GithubRelease.GITHUB_RELEASE, DSL.name("CONSTRAINT_5C"), new TableField[] { GithubRelease.GITHUB_RELEASE.REPO_ID }, Keys.CONSTRAINT_B, new TableField[] { GithubRepository.GITHUB_REPOSITORY.ID }, true);
}
