/*
 * This file is generated by jOOQ.
 */
package edu.java.scrapper.domain.jooq.codegen.tables.pojos;


import jakarta.validation.constraints.Size;

import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class GithubCommit implements Serializable {

    private static final long serialVersionUID = 1L;

    private String sha;
    private Long repoId;
    private String author;
    private OffsetDateTime createdAt;

    public GithubCommit() {}

    public GithubCommit(GithubCommit value) {
        this.sha = value.sha;
        this.repoId = value.repoId;
        this.author = value.author;
        this.createdAt = value.createdAt;
    }

    @ConstructorProperties({ "sha", "repoId", "author", "createdAt" })
    public GithubCommit(
        @NotNull String sha,
        @Nullable Long repoId,
        @NotNull String author,
        @NotNull OffsetDateTime createdAt
    ) {
        this.sha = sha;
        this.repoId = repoId;
        this.author = author;
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>GITHUB_COMMIT.SHA</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 1000000000)
    @NotNull
    public String getSha() {
        return this.sha;
    }

    /**
     * Setter for <code>GITHUB_COMMIT.SHA</code>.
     */
    public void setSha(@NotNull String sha) {
        this.sha = sha;
    }

    /**
     * Getter for <code>GITHUB_COMMIT.REPO_ID</code>.
     */
    @Nullable
    public Long getRepoId() {
        return this.repoId;
    }

    /**
     * Setter for <code>GITHUB_COMMIT.REPO_ID</code>.
     */
    public void setRepoId(@Nullable Long repoId) {
        this.repoId = repoId;
    }

    /**
     * Getter for <code>GITHUB_COMMIT.AUTHOR</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 1000000000)
    @NotNull
    public String getAuthor() {
        return this.author;
    }

    /**
     * Setter for <code>GITHUB_COMMIT.AUTHOR</code>.
     */
    public void setAuthor(@NotNull String author) {
        this.author = author;
    }

    /**
     * Getter for <code>GITHUB_COMMIT.CREATED_AT</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>GITHUB_COMMIT.CREATED_AT</code>.
     */
    public void setCreatedAt(@NotNull OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final GithubCommit other = (GithubCommit) obj;
        if (this.sha == null) {
            if (other.sha != null)
                return false;
        }
        else if (!this.sha.equals(other.sha))
            return false;
        if (this.repoId == null) {
            if (other.repoId != null)
                return false;
        }
        else if (!this.repoId.equals(other.repoId))
            return false;
        if (this.author == null) {
            if (other.author != null)
                return false;
        }
        else if (!this.author.equals(other.author))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.sha == null) ? 0 : this.sha.hashCode());
        result = prime * result + ((this.repoId == null) ? 0 : this.repoId.hashCode());
        result = prime * result + ((this.author == null) ? 0 : this.author.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("GithubCommit (");

        sb.append(sha);
        sb.append(", ").append(repoId);
        sb.append(", ").append(author);
        sb.append(", ").append(createdAt);

        sb.append(")");
        return sb.toString();
    }
}
